### Función para llamar el codigo fuente de Julia ###
#julia_source("Kmedias Angel Julia.jl")
julia_source("GMM en julia.jl")
rm(list=ls())
### Cargar las librerias
# Cargar las librerias
# Cargar la imagen en R
## Cargar librerias necesarias ##
library(png) # Libreria para leer PNG's
library(flextable)# LIbreria para hacer tablas bonitas
library(scatterplot3d) #gráficar en 3D
library(rsvg) # Manipular archivos SVG
library(jpeg) # Comprimir el SVG a JPEG
library(rgl) # OpenGL pero para los gráficos en 3D
library(corrplot) # Para gráficar las correlaciones
library(NbClust) # Correr el Kmedias
library(JuliaCall) # Para pasarme objetos a Julia
#### Función para leer imagenes y mapearlas ###
pixeles = function(imagen){
# Extraer los datos
datos = cbind.data.frame(R = as.vector(imagen[ , ,1]), # Extraer inf de R
G = as.vector(imagen[ , ,2]), # Extraer inf de G
B = as.vector(imagen[ , ,3])) # Extraer inf de B
# Extraer las coordenadas de cada pixel para re-mapearlos
#Filas
nf = dim(imagen)[1]
#Columnas
nc = dim(imagen)[2]
# Hacer el ordenamiento para remapearlos
X = rep(nf:1,nc)
Y = rep(1:nc,each = nf)
datos$X = X
datos$Y = Y
# Añadir el vector de colores al conjunto de datos
datos$color = rgb(datos$R,datos$G,datos$B)
# Regresar el objeto transformado
return(datos)
}
### Función para llamar el codigo fuente de Julia ###
#julia_source("Kmedias Angel Julia.jl")
julia_source("GMM en julia.jl")
#### Imagen 1: Denisse Guerrero ####
### Cargando la imagen desde la ruta local
ruta1 = "imagenes/IM2.jpg" # Ruta local de la imagen
imagen1 = readJPEG(ruta1) # Descomponer la imagen en sus canales RGB
#### Imagen 1: Denisse Guerrero ####
### Cargando la imagen desde la ruta local
ruta1 = "imagenes/IM2.jpg" # Ruta local de la imagen
imagen1 = readJPEG(ruta1) # Descomponer la imagen en sus canales RGB
#### Imagen 1: Denisse Guerrero ####
### Cargando la imagen desde la ruta local
ruta1 = "IMAGENES/IM2.jpg" # Ruta local de la imagen
imagen1 = readJPEG(ruta1) # Descomponer la imagen en sus canales RGB
datos1 = pixeles(imagen1)
### Cargar las cosas de Julia
re = proc.time()
prueba1 = julia_call("GMM",datos1[,1:3],5)
imagen1
write.csv(datos1,"datos1.csv",row.names = F)
file.choose()
etiqueta = read.csv("etiqueta.csv")
datos1$etiqueta = etiqueta
table(etiqueta)
for(i in unique(datos1$etiqueta)){
### Calcular la media
media = colMeans(datos1[datos1$etiqueta==i ,1:3])
### Calcular y agregar el nuevo color
datos1$ecolor[datos1$etiqueta==i] = rgb(media[1],media[2],media[3])
}
datos1$ecolor
datos1$etiqueta = etiqueta
#### Hacer el vector de medias
i = 1
datos1$etiqueta
datos1$etiqueta==i
### Calcular la media
media = colMeans(datos1[datos1$etiqueta==i ,1:3])
rgb(media[1],media[2],media[3])
#### Hacer el vector de medias
i = 1
for(i in unique(datos1$etiqueta)){
### Calcular la media
media = colMeans(datos1[datos1$etiqueta==i ,1:3])
### Calcular y agregar el nuevo color
datos1$ecolor[datos1$etiqueta==i] = rgb(media[1],media[2],media[3])
}
datos1$ecolor
unique(datos1$etiqueta)
datos1$etiqueta==i
datos1$ecolor = ""
#### Hacer el vector de medias
i = 1
for(i in unique(datos1$etiqueta)){
### Calcular la media
media = colMeans(datos1[datos1$etiqueta==i ,1:3])
### Calcular y agregar el nuevo color
datos1$ecolor[datos1$etiqueta==i] = rgb(media[1],media[2],media[3])
}
datos1$ecolor
unique(datos1$etiqueta)
unique(as.vector(datos1$etiqueta))
for(i in unique(as.vector(datos1$etiqueta)) ){
### Calcular la media
media = colMeans(datos1[datos1$etiqueta==i ,1:3])
### Calcular y agregar el nuevo color
datos1$ecolor[datos1$etiqueta==i] = rgb(media[1],media[2],media[3])
}
datos1$ecolor
#### Hacer el vector de medias
for(i in unique(as.vector(datos1$etiqueta)) ){
### Calcular la media
media = colMeans(datos1[datos1$etiqueta==i ,1:3])
### Calcular y agregar el nuevo color
datos1$ecolor[datos1$etiqueta==i] = rgb(media[1],media[2],media[3])
}
datos1$etiqueta==i
datos1$etiqueta = etiqueta
datos1$ecolor = ""
#### Hacer el vector de medias
for(i in 1:5 ){
### Calcular la media
media = colMeans(datos1[datos1$etiqueta==i ,1:3])
### Calcular y agregar el nuevo color
datos1$ecolor[datos1$etiqueta==i] = rgb(media[1],media[2],media[3])
}
datos1$ecolor
table(datos1$ecolor)
plot3d(x = datos1$Y,
y = 1,
z = datos1$X,
col = datos1$ecolor)
rm(list=ls())
### Cargar las librerias
# Cargar las librerias
# Cargar la imagen en R
## Cargar librerias necesarias ##
library(png) # Libreria para leer PNG's
library(flextable)# LIbreria para hacer tablas bonitas
library(scatterplot3d) #gráficar en 3D
library(rsvg) # Manipular archivos SVG
library(jpeg) # Comprimir el SVG a JPEG
library(rgl) # OpenGL pero para los gráficos en 3D
library(corrplot) # Para gráficar las correlaciones
library(NbClust) # Correr el Kmedias
library(JuliaCall) # Para pasarme objetos a Julia
#### Función para leer imagenes y mapearlas ###
pixeles = function(imagen){
# Extraer los datos
datos = cbind.data.frame(R = as.vector(imagen[ , ,1]), # Extraer inf de R
G = as.vector(imagen[ , ,2]), # Extraer inf de G
B = as.vector(imagen[ , ,3])) # Extraer inf de B
# Extraer las coordenadas de cada pixel para re-mapearlos
#Filas
nf = dim(imagen)[1]
#Columnas
nc = dim(imagen)[2]
# Hacer el ordenamiento para remapearlos
X = rep(nf:1,nc)
Y = rep(1:nc,each = nf)
datos$X = X
datos$Y = Y
# Añadir el vector de colores al conjunto de datos
datos$color = rgb(datos$R,datos$G,datos$B)
# Regresar el objeto transformado
return(datos)
}
### Función para llamar el codigo fuente de Julia ###
#julia_source("Kmedias Angel Julia.jl")
julia_source("GMM en julia.jl")
#### Imagen 1: Denisse Guerrero ####
### Cargando la imagen desde la ruta local
ruta1 = "IMAGENES/IM2.jpg" # Ruta local de la imagen
imagen1 = readJPEG(ruta1) # Descomponer la imagen en sus canales RGB
datos1 = pixeles(imagen1)
### Cargar las cosas de Julia
re = proc.time()
prueba1 = julia_call("GMM1",datos1[,1:3],5)
### Función para llamar el codigo fuente de Julia ###
#julia_source("Kmedias Angel Julia.jl")
julia_source("GMM en julia.jl")
#### Imagen 1: Denisse Guerrero ####
### Cargando la imagen desde la ruta local
ruta1 = "IMAGENES/IM2.jpg" # Ruta local de la imagen
imagen1 = readJPEG(ruta1) # Descomponer la imagen en sus canales RGB
datos1 = pixeles(imagen1)
prueba1 = julia_call("GMM1",datos1[,1:3],5)
### Función para llamar el codigo fuente de Julia ###
#julia_source("Kmedias Angel Julia.jl")
julia_source("GMM en julia.jl")
rm(list=ls())
### Cargar las librerias
# Cargar las librerias
# Cargar la imagen en R
## Cargar librerias necesarias ##
library(png) # Libreria para leer PNG's
library(flextable)# LIbreria para hacer tablas bonitas
library(scatterplot3d) #gráficar en 3D
library(rsvg) # Manipular archivos SVG
library(jpeg) # Comprimir el SVG a JPEG
library(rgl) # OpenGL pero para los gráficos en 3D
library(corrplot) # Para gráficar las correlaciones
library(NbClust) # Correr el Kmedias
library(JuliaCall) # Para pasarme objetos a Julia
### Función para llamar el codigo fuente de Julia ###
#julia_source("Kmedias Angel Julia.jl")
julia_source("GMM en julia.jl")
### Función para llamar el codigo fuente de Julia ###
#julia_source("Kmedias Angel Julia.jl")
julia_source("GMM en julia.jl")
### Cargar las cosas de Julia
datos1 = iris[,1:3]
prueba1 = julia_call("GMM1",5,datos1[,1:3])
prueba1 = julia_call("gaussiano",5,datos1[,1:3])
prueba1 = julia_call("gausiano",5,datos1[,1:3])
datos1[,1:3]
### Función para llamar el codigo fuente de Julia ###
#julia_source("Kmedias Angel Julia.jl")
julia_source("GMM en julia.jl")
prueba1 = julia_call("gausiano",5,datos1[,1:3])
### Función para llamar el codigo fuente de Julia ###
#julia_source("Kmedias Angel Julia.jl")
julia_source("GMM en julia.jl")
prueba1 = julia_call("gausiano",5,datos1[,1:3])
prueba1
re = proc.time()
prueba1 = julia_call("gausiano",5,datos1[,1:3])
proc.time()-re
### Cargando la imagen desde la ruta local
ruta1 = "IMAGENES/IM2.jpg" # Ruta local de la imagen
imagen1 = readJPEG(ruta1) # Descomponer la imagen en sus canales RGB
datos1 = pixeles(imagen1)
rm(list=ls())
### Cargar las librerias
# Cargar las librerias
# Cargar la imagen en R
## Cargar librerias necesarias ##
library(png) # Libreria para leer PNG's
library(flextable)# LIbreria para hacer tablas bonitas
library(scatterplot3d) #gráficar en 3D
library(rsvg) # Manipular archivos SVG
library(jpeg) # Comprimir el SVG a JPEG
library(rgl) # OpenGL pero para los gráficos en 3D
library(corrplot) # Para gráficar las correlaciones
library(NbClust) # Correr el Kmedias
library(JuliaCall) # Para pasarme objetos a Julia
#### Función para leer imagenes y mapearlas ###
pixeles = function(imagen){
# Extraer los datos
datos = cbind.data.frame(R = as.vector(imagen[ , ,1]), # Extraer inf de R
G = as.vector(imagen[ , ,2]), # Extraer inf de G
B = as.vector(imagen[ , ,3])) # Extraer inf de B
# Extraer las coordenadas de cada pixel para re-mapearlos
#Filas
nf = dim(imagen)[1]
#Columnas
nc = dim(imagen)[2]
# Hacer el ordenamiento para remapearlos
X = rep(nf:1,nc)
Y = rep(1:nc,each = nf)
datos$X = X
datos$Y = Y
# Añadir el vector de colores al conjunto de datos
datos$color = rgb(datos$R,datos$G,datos$B)
# Regresar el objeto transformado
return(datos)
}
### Función para llamar el codigo fuente de Julia ###
#julia_source("Kmedias Angel Julia.jl")
julia_source("GMM en julia.jl")
#### Imagen 1: Denisse Guerrero ####
### Cargando la imagen desde la ruta local
ruta1 = "IMAGENES/IM2.jpg" # Ruta local de la imagen
imagen1 = readJPEG(ruta1) # Descomponer la imagen en sus canales RGB
datos1 = pixeles(imagen1)
### Cargar las cosas de Julia
re = proc.time()
re = proc.time()
prueba1 = julia_call("gausiano",5,datos1[,1:3])
proc.time()-re
prueba1
datos1$etiqueta = prueba1$Etiqueta
datos1$ecolor = ""
#### Hacer el vector de medias
for(i in 1:length(unique(datos1$etiqueta)) ){
### Calcular la media
media = colMeans(datos1[datos1$etiqueta==i ,1:3])
### Calcular y agregar el nuevo color
datos1$ecolor[datos1$etiqueta==i] = rgb(media[1],media[2],media[3])
}
datos1$ecolor
plot3d(x = datos1$Y,
y = 1,
z = datos1$X,
col = datos1$ecolor)
#### Imagen 1: Denisse Guerrero ####
### Cargando la imagen desde la ruta local
ruta1 = "IMAGENES/IM4.jpg" # Ruta local de la imagen
imagen1 = readJPEG(ruta1) # Descomponer la imagen en sus canales RGB
datos1 = pixeles(imagen1)
### Cargar las cosas de Julia
re = proc.time()
prueba1 = julia_call("gausiano",5,datos1[,1:3])
proc.time()-re
datos1$etiqueta = prueba1$Etiqueta
datos1$ecolor = ""
#### Hacer el vector de medias
for(i in 1:length(unique(datos1$etiqueta)) ){
### Calcular la media
media = colMeans(datos1[datos1$etiqueta==i ,1:3])
### Calcular y agregar el nuevo color
datos1$ecolor[datos1$etiqueta==i] = rgb(media[1],media[2],media[3])
}
plot3d(x = datos1$Y,
y = 1,
z = datos1$X,
col = datos1$ecolor)
#### Imagen 1: Denisse Guerrero ####
### Cargando la imagen desde la ruta local
ruta1 = "IMAGENES/IM4.jpg" # Ruta local de la imagen
imagen1 = readJPEG(ruta1) # Descomponer la imagen en sus canales RGB
datos1 = pixeles(imagen1)
### Cargar las cosas de Julia
re = proc.time()
prueba1 = julia_call("gausiano",2,datos1[,1:3])
proc.time()-re
datos1$etiqueta = prueba1$Etiqueta
datos1$ecolor = ""
#### Hacer el vector de medias
for(i in 1:length(unique(datos1$etiqueta)) ){
### Calcular la media
media = colMeans(datos1[datos1$etiqueta==i ,1:3])
### Calcular y agregar el nuevo color
datos1$ecolor[datos1$etiqueta==i] = rgb(media[1],media[2],media[3])
}
plot3d(x = datos1$Y,
y = 1,
z = datos1$X,
col = datos1$ecolor)
ruta1 = "IMAGENES/IM4.jpg" # Ruta local de la imagen
imagen1 = readJPEG(ruta1) # Descomponer la imagen en sus canales RGB
datos1 = pixeles(imagen1)
### Cargar las cosas de Julia
re = proc.time()
prueba1 = julia_call("gausiano",3,datos1[,1:3])
proc.time()-re
datos1$etiqueta = prueba1$Etiqueta
datos1$ecolor = ""
#### Hacer el vector de medias
for(i in 1:length(unique(datos1$etiqueta)) ){
### Calcular la media
media = colMeans(datos1[datos1$etiqueta==i ,1:3])
### Calcular y agregar el nuevo color
datos1$ecolor[datos1$etiqueta==i] = rgb(media[1],media[2],media[3])
}
plot3d(x = datos1$Y,
y = 1,
z = datos1$X,
col = datos1$ecolor)
### Cargar las cosas de Julia
re = proc.time()
prueba1 = julia_call("gausiano",10,datos1[,1:3])
proc.time()-re
datos1$etiqueta = prueba1$Etiqueta
datos1$ecolor = ""
#### Hacer el vector de medias
for(i in 1:length(unique(datos1$etiqueta)) ){
### Calcular la media
media = colMeans(datos1[datos1$etiqueta==i ,1:3])
### Calcular y agregar el nuevo color
datos1$ecolor[datos1$etiqueta==i] = rgb(media[1],media[2],media[3])
}
plot3d(x = datos1$Y,
y = 1,
z = datos1$X,
col = datos1$ecolor)
#### Imagen 1: Denisse Guerrero ####
### Cargando la imagen desde la ruta local
ruta1 = "IMAGENES/IM2.jpg" # Ruta local de la imagen
imagen1 = readJPEG(ruta1) # Descomponer la imagen en sus canales RGB
datos1 = pixeles(imagen1)
### Cargar las cosas de Julia
re = proc.time()
prueba1 = julia_call("gausiano",10,datos1[,1:3])
proc.time()-re
datos1$etiqueta = prueba1$Etiqueta
datos1$ecolor = ""
#### Hacer el vector de medias
for(i in 1:length(unique(datos1$etiqueta)) ){
### Calcular la media
media = colMeans(datos1[datos1$etiqueta==i ,1:3])
### Calcular y agregar el nuevo color
datos1$ecolor[datos1$etiqueta==i] = rgb(media[1],media[2],media[3])
}
plot3d(x = datos1$Y,
y = 1,
z = datos1$X,
col = datos1$ecolor)
### Cargando la imagen desde la ruta local
ruta1 = "IMAGENES/IM2.jpg" # Ruta local de la imagen
imagen1 = readJPEG(ruta1) # Descomponer la imagen en sus canales RGB
datos1 = pixeles(imagen1)
### Cargar las cosas de Julia
re = proc.time()
prueba1 = julia_call("gausiano",2,datos1[,1:3])
proc.time()-re
datos1$etiqueta = prueba1$Etiqueta
datos1$ecolor = ""
#### Hacer el vector de medias
for(i in 1:length(unique(datos1$etiqueta)) ){
### Calcular la media
media = colMeans(datos1[datos1$etiqueta==i ,1:3])
### Calcular y agregar el nuevo color
datos1$ecolor[datos1$etiqueta==i] = rgb(media[1],media[2],media[3])
}
plot3d(x = datos1$Y,
y = 1,
z = datos1$X,
col = datos1$ecolor)
### Cargar las cosas de Julia
re = proc.time()
prueba1 = julia_call("gausiano",4,datos1[,1:3])
proc.time()-re
datos1$etiqueta = prueba1$Etiqueta
datos1$ecolor = ""
#### Hacer el vector de medias
for(i in 1:length(unique(datos1$etiqueta)) ){
### Calcular la media
media = colMeans(datos1[datos1$etiqueta==i ,1:3])
### Calcular y agregar el nuevo color
datos1$ecolor[datos1$etiqueta==i] = rgb(media[1],media[2],media[3])
}
plot3d(x = datos1$Y,
y = 1,
z = datos1$X,
col = datos1$ecolor)
### Cargar las cosas de Julia
re = proc.time()
prueba1 = julia_call("gausiano",8,datos1[,1:3])
proc.time()-re
datos1$etiqueta = prueba1$Etiqueta
datos1$ecolor = ""
#### Hacer el vector de medias
for(i in 1:length(unique(datos1$etiqueta)) ){
### Calcular la media
media = colMeans(datos1[datos1$etiqueta==i ,1:3])
### Calcular y agregar el nuevo color
datos1$ecolor[datos1$etiqueta==i] = rgb(media[1],media[2],media[3])
}
plot3d(x = datos1$Y,
y = 1,
z = datos1$X,
col = datos1$ecolor)
#### Imagen 1: Denisse Guerrero ####
### Cargando la imagen desde la ruta local
ruta1 = "IMAGENES/IM8.jpg" # Ruta local de la imagen
imagen1 = readJPEG(ruta1) # Descomponer la imagen en sus canales RGB
#### Imagen 1: Denisse Guerrero ####
### Cargando la imagen desde la ruta local
ruta1 = "IMAGENES/IM8.jpeg" # Ruta local de la imagen
imagen1 = readJPEG(ruta1) # Descomponer la imagen en sus canales RGB
datos1 = pixeles(imagen1)
### Cargar las cosas de Julia
re = proc.time()
prueba1 = julia_call("gausiano",2,datos1[,1:3])
proc.time()-re
datos1$etiqueta = prueba1$Etiqueta
datos1$ecolor = ""
#### Hacer el vector de medias
for(i in 1:length(unique(datos1$etiqueta)) ){
### Calcular la media
media = colMeans(datos1[datos1$etiqueta==i ,1:3])
### Calcular y agregar el nuevo color
datos1$ecolor[datos1$etiqueta==i] = rgb(media[1],media[2],media[3])
}
plot3d(x = datos1$Y,
y = 1,
z = datos1$X,
col = datos1$ecolor)
### Cargar las cosas de Julia
re = proc.time()
prueba1 = julia_call("gausiano",,datos1[,1:3])
### Cargar las cosas de Julia
re = proc.time()
prueba1 = julia_call("gausiano",5,datos1[,1:3])
proc.time()-re
datos1$etiqueta = prueba1$Etiqueta
datos1$ecolor = ""
#### Hacer el vector de medias
for(i in 1:length(unique(datos1$etiqueta)) ){
### Calcular la media
media = colMeans(datos1[datos1$etiqueta==i ,1:3])
### Calcular y agregar el nuevo color
datos1$ecolor[datos1$etiqueta==i] = rgb(media[1],media[2],media[3])
}
plot3d(x = datos1$Y,
y = 1,
z = datos1$X,
col = datos1$ecolor)
